name: Android CI
env:
  # Module names for your project
  server_module: server
  client_module: client
  # Project name
  project_name: KtorConnect
on:
  push:
    branches:
      - 'main'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      
      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
      
      # Extract version from build.gradle.kts
      - name: Extract version information
        run: |
          # Server version
          SERVER_VERSION=$(grep -o 'versionName = "[^"]*"' ${{ env.server_module }}/build.gradle.kts | cut -d'"' -f2)
          echo "SERVER_VERSION=$SERVER_VERSION" >> $GITHUB_ENV
          
          # Client version
          CLIENT_VERSION=$(grep -o 'versionName = "[^"]*"' ${{ env.client_module }}/build.gradle.kts | cut -d'"' -f2)
          echo "CLIENT_VERSION=$CLIENT_VERSION" >> $GITHUB_ENV
          
          # Use server version for the release tag (you can modify this as needed)
          echo "RELEASE_VERSION=$SERVER_VERSION" >> $GITHUB_ENV
      
      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      
      # App Build
      - name: Build Server APK
        run: |
          chmod +x ./gradlew
          ./gradlew assembleDebug
          ./gradlew assembleRelease
      
      # Upload Server Debug APK as artifact
      - name: Upload Server APK Debug
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.project_name }} - Server - Debug APK
          path: ${{ env.server_module }}/build/outputs/apk/debug/
      
      # Upload Server Release APK as artifact
      - name: Upload Server APK Release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.project_name }} - Server - Release APK
          path: ${{ env.server_module }}/build/outputs/apk/release/
      
      # Upload Client Debug APK as artifact
      - name: Upload Client APK Debug
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.project_name }} - Client - Debug APK
          path: ${{ env.client_module }}/build/outputs/apk/debug/
      
      # Upload Client Release APK as artifact
      - name: Upload Client APK Release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.project_name }} - Client - Release APK
          path: ${{ env.client_module }}/build/outputs/apk/release/
          
      # Rename APKs for easier identification
      - name: Rename APKs
        run: |
          mkdir -p release_files
          cp ${{ env.server_module }}/build/outputs/apk/debug/*.apk release_files/KtorConnect-Server-${{ env.SERVER_VERSION }}-debug.apk
          cp ${{ env.server_module }}/build/outputs/apk/release/*.apk release_files/KtorConnect-Server-${{ env.SERVER_VERSION }}-release.apk
          cp ${{ env.client_module }}/build/outputs/apk/debug/*.apk release_files/KtorConnect-Client-${{ env.CLIENT_VERSION }}-debug.apk
          cp ${{ env.client_module }}/build/outputs/apk/release/*.apk release_files/KtorConnect-Client-${{ env.CLIENT_VERSION }}-release.apk
      
      # Create GitHub Release
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.RELEASE_VERSION }}
          name: Release v${{ env.RELEASE_VERSION }}
          body: |
            KtorConnect Release v${{ env.RELEASE_VERSION }} (${{ env.date_today }})
            
            This release contains:
            - Server APK v${{ env.SERVER_VERSION }} (Debug & Release)
            - Client APK v${{ env.CLIENT_VERSION }} (Debug & Release)
            
            Built automatically using GitHub Actions.
          draft: false
          prerelease: false
          files: |
            release_files/KtorConnect-Server-${{ env.SERVER_VERSION }}-debug.apk
            release_files/KtorConnect-Server-${{ env.SERVER_VERSION }}-release.apk
            release_files/KtorConnect-Client-${{ env.CLIENT_VERSION }}-debug.apk
            release_files/KtorConnect-Client-${{ env.CLIENT_VERSION }}-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
